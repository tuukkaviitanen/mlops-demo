name: Build

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 */1 * *"

jobs:
  tag_release:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    outputs:
      version: ${{steps.tagging.outputs.new_tag || steps.read_tag.outputs.tag}}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # Required due to the way Git works, without it github-action-get-previous-tag action won't be able to find any or the correct tags
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' }}
        id: tagging
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      - name: Get Latest Tag
        if: ${{ github.event_name != 'push' }}
        uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
        id: read_tag

  publish_docker_image:
    needs: [tag_release]
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: ghcr.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      # Set up QEMU for cross-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v2.0
        with:
          format: "YYYYMMDDHHmmss"

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.tag_release.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.tag_release.outputs.version }}-${{ steps.time.outputs.time }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          push: true
          platforms: linux/amd64,linux/arm64

  deploy_to_render:
    needs: [publish_docker_image]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          wait_deploy: true
